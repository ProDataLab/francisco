//
// Generated file, do not edit! Created by opp_msgc 4.4 from Warning.msg.
//

#ifndef _WARNING_M_H_
#define _WARNING_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0404
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>Warning.msg</tt> by opp_msgc.
 * <pre>
 * packet Warning {
 *     @customize(true);  
 *     int someField;
 *     abstract int anotherField;
 * }
 * </pre>
 *
 * Warning_Base is only useful if it gets subclassed, and Warning is derived from it.
 * The minimum code to be written for Warning is the following:
 *
 * <pre>
 * class Warning : public Warning_Base
 * {
 *   private:
 *     void copy(const Warning& other) { ... }

 *   public:
 *     Warning(const char *name=NULL, int kind=0) : Warning_Base(name,kind) {}
 *     Warning(const Warning& other) : Warning_Base(other) {copy(other);}
 *     Warning& operator=(const Warning& other) {if (this==&other) return *this; Warning_Base::operator=(other); copy(other); return *this;}
 *     virtual Warning *dup() const {return new Warning(*this);}
 *     // ADD CODE HERE to redefine and implement pure virtual functions from Warning_Base
 * };
 * </pre>
 *
 * The following should go into a .cc (.cpp) file:
 *
 * <pre>
 * Register_Class(Warning);
 * </pre>
 */
class Warning_Base : public ::cPacket
{
  protected:
    int someField_var;

  private:
    void copy(const Warning_Base& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Warning_Base&);
    // make constructors protected to avoid instantiation
    Warning_Base(const char *name=NULL, int kind=0);
    Warning_Base(const Warning_Base& other);
    // make assignment operator protected to force the user override it
    Warning_Base& operator=(const Warning_Base& other);

  public:
    virtual ~Warning_Base();
    virtual Warning_Base *dup() const {throw cRuntimeError("You forgot to manually add a dup() function to class Warning");}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getSomeField() const;
    virtual void setSomeField(int someField);
    virtual int getAnotherField() const = 0;
    virtual void setAnotherField(int anotherField) = 0;
};


#endif // _WARNING_M_H_
